@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions
@inject IHttpContextAccessor HttpContextAccessor
@model iPromo.Entities.Quote
@{
    ViewData["Title"] = "Details";
    var ss = HttpContextAccessor.HttpContext.Request.GetDisplayUrl().ToLower().Contains("/readonly/");
    //Readonly for all role
    var isReadOnly = (!HttpContextAccessor.HttpContext.Request.GetDisplayUrl().ToLower().Contains("/readonly/") || ViewBag.QuoteNumber == null) ? string.Empty : "readonly=\"readonly\"";

    string statusStyle = StaticItems.QuoteStatusResult[(Model.QuoteStatusResultID.HasValue ? (int)Model.QuoteStatusResultID : 1)];
    statusStyle = System.Text.RegularExpressions.Regex.Replace(statusStyle, @"\s", "").ToLower();

    string roleStyle = StaticItems.QuoteStatusLevel[(Model.QuoteStatusLevelID.HasValue ? (int)Model.QuoteStatusLevelID : 1)];
    roleStyle = System.Text.RegularExpressions.Regex.Replace(ViewBag.Role, @"\s", "").ToLower();

}
<script type="text/javascript">
    var app = app || {};
    app.quoteNumber = '@ViewBag.QuoteNumber';
    app.isReadonly = '@(isReadOnly!=string.Empty)'.toLowerCase() == "true" || window.location.href.toLowerCase().indexOf("/readonly/") > -1;
</script>
<div class="container">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-4">
                    <h3 class="panel-title">Standard Promo</h3>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Promo Number
                    </div>
                    <input type="text" class="form-control" @isReadOnly id="QuoteNumber" name="QuoteNumber" value="@Model.QuoteNumber">
                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Promo Status
                    </div>
                    <div class="btn-sm form-control status-@statusStyle">@string.Format("{0} ({1})", StaticItems.QuoteStatusResult[(Model.QuoteStatusResultID.HasValue ? (int)Model.QuoteStatusResultID : 1)], StaticItems.QuoteStatusLevel[(Model.QuoteStatusLevelID.HasValue ? (int)Model.QuoteStatusLevelID : 1)])</div>

                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Submit Date
                    </div>
                    <input type="text" class="form-control " @isReadOnly id="SubmitDatetime" name="SubmitDatetime" value="@(Model.SubmitDatetime.HasValue?Model.SubmitDatetime.Value.ToString("MMM dd, yyyy"):"")" />

                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Submit By
                    </div>
                    <input type="text" class="form-control " @isReadOnly id="SubmittedByUserName" name="SubmittedByUserName" value="@Model.SubmittedByUserID" />

                </div>
            </div>

            <div class="row">
                <div class="col-sm-12 col-md-12">
                    <div class="row">
                        <div class="col-sm-12 col-md-9 form-group">
                            <div class="control-label">
                                Promo Description
                            </div>
                            <input type="text" @isReadOnly class="form-control " id="TPBackground" name="TPBackground" placeholder="Type a value" value="@Model.TPBackground" />

                        </div>
                        <div class="col-sm-6 col-md-3 form-group">
                            <div class="control-label">
                                Need Price Approved By
                            </div>
                            <input type="text" class="form-control " @isReadOnly id="NeedPriceApprovedBy" name="NeedPriceApprovedBy" value="@(Model.NeedPriceApprovedBy.HasValue?Model.NeedPriceApprovedBy.Value.ToString("MMM dd, yyyy"):"")" />

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="subheading">
                        Account Information
                        <hr>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Sold To #
                    </div>
                    <input type="text" @isReadOnly id="kCustomers" name="kCustomers" class="form-control" value="@Model.PlanningAccountNumber" />
                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Sold To Name
                    </div>
                    <input id="PlanningAccountName" class="form-control" type="text" @isReadOnly name="PlanningAccountName" value="@ViewBag.SoldToName" />
                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Currency
                    </div>
                    <input id="Currency" type="text" class="form-control" @isReadOnly name="Currency" value="@ViewBag.Currency" />
                </div>
                <div class="col-sm-6 col-md-3 form-group-xs form-group">
                    <div class="control-label">
                        Account Manager
                    </div>
                    <input id="kddlAccountManager" class="form-control" name="kddlAccountManager" placeholder="Select Account Manager" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-6  form-group">
                    <div class="control-label">
                        Tier 2 Customer #
                    </div>
                    <input type="text" id="Tier2CustomerName" class="form-control" name="Tier2CustomerName" @isReadOnly value="@ViewBag.Tier2CustomerName" />
                </div>
                <div class="col-sm-6 col-md-6 form-group">
                    <div class="control-label">
                        End User
                    </div>
                    <input type="text" id="EndCustomerName" class="form-control" name="EndCustomerName" @isReadOnly value="@ViewBag.EndCustomerName" />
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="subheading">
                        Promo Validity
                        <hr>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-5 col-md-5 form-group">
                    <div class="control-label">
                        Valid From
                    </div>
                    <input id="PromoFromDatetime" class="form-control" name="PromoFromDatetime" placeholder="Select date" value="@(Model.PromoFromDatetime.HasValue?Model.PromoFromDatetime.Value.ToString("MMM dd, yyyy"):"")">
                </div>
                <div class="col-sm-5 col-md-5 form-group">
                    <div class="control-label">
                        Valid To
                    </div>
                    <input id="PromolToDatetime" class="form-control" name="PromolToDatetime" placeholder="Select date" value="@(Model.PromolToDatetime.HasValue?Model.PromolToDatetime.Value.ToString("MMM dd, yyyy"):"")">
                </div>
                <div class="col-sm-2 col-md-2 form-group">
                    <div class="control-label">
                        Help
                    </div>
                    <a href="https://www.google.com/url?q=https%3A%2F%2Fappandintegration.slack.com%2Fmessages%2FD88G1G12B%2F&sa=D&sntz=1&usg=AFQjCNFdbm1uxzUk1P0x48ZxW_ydxP_MMw" target="_blank" class="btn btn-primary"><span>Need Help</span></a>

                </div>
            </div>
        </div>
    </div>
    <!--------------------------------------------- New panel --------------------------------------------->
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-4">
                    <h3 class="panel-title">Add/Edit Product For Promo</h3>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div id="Grid" />
        </div>
    </div>
    <!--------------------------------------------- New panel --------------------------------------------->
    <div class="panel panel-primary">
        @Html.Partial("~/Views/Shared/_CommentsAndAttachments.cshtml", Model)
    </div>
</div>
<script type="text/javascript">
    var hiddenColumns = {};
    hiddenColumns["PM"] = "";
    hiddenColumns["PM"] = "";

    $(document).ready(function () {
        $("#publicComment, #publicAttachment, #divAddComments").hide();
        var dtpkPromoFromDatetime = $("#PromoFromDatetime").kendoDatePicker({
            culture: "en-US",
            change: function (e) { },
        }).data("kendoDatePicker");

        var dtpkPromolToDatetime = $("#PromolToDatetime").kendoDatePicker({
            culture: "en-US",
            change: function (e) { },
        }).data("kendoDatePicker");

        dtpkPromolToDatetime.enable(!app.isReadonly);
        dtpkPromoFromDatetime.enable(!app.isReadonly);

        var url = "/api/quoteitems/" + app.userId + "/" + app.role + "/" + app.quoteNumber;
        $("#Grid").kendoGrid({
            dataSource: {
                transport: {
                    read: url
                },
                schema: {
                    model: {
                        fields: {
                            productNumber: { type: "string" },
                            requestedQuantity: { type: "number" },
                            msrp: { type: "number" },
                            listPrice: { type: "number" },
                            requestedPOS: { type: "number" },

                            productCost: { type: "number" },
                            winLoss: { type: "string" },
                            winQuantity: { type: "number" },
                            winNetPrice: { type: "number" },
                            winPOS: { type: "string" },
                            requestedNetPrice: { type: "number" },

                            pmRedLine: {
                                type: "number",
                                parse: function (data) {
                                    if (data != "" && data != undefined && data == 999999) {
                                        return 0;
                                    }
                                    return data;
                                }
                            },
                            pmApprovedPrice: { type: "number" },
                            peRedLine: {
                                type: "number",
                                parse: function (data) {
                                    if (data != "" && data != undefined && data == 999999) {
                                        return 0;
                                    }
                                    return data;
                                }
                            },
                            peApprovedPrice: { type: "number" },
                            vpFinanceApprovedPrice: { type: "number" }
                        }
                    }
                },
                pageSize: 20,
            },
            height: 550,
            sortable: true,
            pageable: true,
            columns: [{
                field: "productNumber",
                title: "SKU"
            },
            {
                field: "requestedQuantity",
                title: "Quantity"
            },
            {
                field: "msrp",
                title: "MSRP"
            },
            {
                field: "listPrice",
                title: "Price List"
            },
            {
                field: "requestedPOS",
                title: "Req. POS"
            },
            {
                field: "requestedNetPrice",
                title: "Req. Net Price"
            },
            {
                field: "pmRedLine",
                title: "PM RedLine",
                template: "#= pmRedLine>0 ? pmRedLine : '' #"
            },
            {
                field: "pmApprovedPrice",
                title: "PM ApprovedPrice",
                template: "#= pmApprovedPrice>0 ? pmApprovedPrice : '' #"
            },
            {
                field: "peRedLine",
                title: "PE RedLine",
                template: "#= peRedLine>0 ? peRedLine : '' #"
            },
            {
                field: "peApprovedPrice",
                title: "PE ApprovedPrice",
                template: "#= peApprovedPrice>0 ? peApprovedPrice : '' #"
            },
            {
                field: "vpFinanceApprovedPrice",
                title: "ApprovedPrice",
                template: "#= vpFinanceApprovedPrice > 0 ? vpFinanceApprovedPrice : '' #"
            }
            ]
        });



        var hiddenColumns = {};
        hiddenColumns["PM"] = ["peRedLine", "peApprovedPrice", "vpFinanceApprovedPrice"];
        hiddenColumns["POE"] = ["vpFinanceApprovedPrice"];
        hiddenColumns["VP FINANCE"] = [];

        var grid = $("#Grid").data("kendoGrid");
        $.each(hiddenColumns[app.role], function (i, val) {
            grid.hideColumn(val);
        });
        $("#kddlAccountManager").kendoDropDownList({
            dataTextField: "userName",
            dataValueField: "userID"
        });
        var kddlAccountManager = $("#kddlAccountManager").data("kendoDropDownList");
        kddlAccountManager.text('@ViewBag.AccountManagerName');
        kddlAccountManager.enable(false);
    });
</script>