@model iPromo.Entities.Quote
@{
    ViewData["Title"] = "Details";
    var isReadOnly = (ViewBag.Role == "RSM" || ViewBag.QuoteNumber == null) ? string.Empty : "readonly=\"readonly\"";

    string statusStyle = StaticItems.QuoteStatusResult[(Model.QuoteStatusResultID.HasValue ? (int)Model.QuoteStatusResultID : 1)];
    statusStyle = System.Text.RegularExpressions.Regex.Replace(statusStyle, @"\s", "").ToLower();

    string roleStyle = StaticItems.QuoteStatusLevel[(Model.QuoteStatusLevelID.HasValue ? (int)Model.QuoteStatusLevelID : 1)];
    roleStyle = System.Text.RegularExpressions.Regex.Replace(ViewBag.Role, @"\s", "").ToLower();

}
<script type="text/javascript">
        var app = app || {};
    app.quoteNumber = '@ViewBag.QuoteNumber';
    app.isReadonly = '@(isReadOnly!=string.Empty)'.toLowerCase()=="true";
</script>
<div class="container">
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-4">
                    <h3 class="panel-title">Standard Promotion</h3>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Quote Number
                    </div>
                    <input type="text" class="form-control" @isReadOnly id="QuoteNumber" name="QuoteNumber" value="@Model.QuoteNumber">
                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Quote Status
                    </div>
                    <div class="btn-sm form-control status-@statusStyle">@string.Format("{0} ({1})", StaticItems.QuoteStatusResult[(Model.QuoteStatusResultID.HasValue ? (int)Model.QuoteStatusResultID : 1)], StaticItems.QuoteStatusLevel[(Model.QuoteStatusLevelID.HasValue ? (int)Model.QuoteStatusLevelID : 1)])</div>

                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Submit Date
                    </div>
                    <input type="text" class="form-control " @isReadOnly id="SubmitDatetime" name="SubmitDatetime" value="@(Model.SubmitDatetime.HasValue?Model.SubmitDatetime.Value.ToString("MMM dd, yyyy"):"")" />

                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Submit By
                    </div>
                    <input type="text" class="form-control " @isReadOnly id="SubmittedByUserName" name="SubmittedByUserName" value="@Model.SubmittedByUserID" />

                </div>
            </div>

            <div class="row">
                <div class="col-sm-12 col-md-12">
                    <div class="row">
                        <div class="col-sm-12 col-md-9 form-group">
                            <div class="control-label">
                                Quote Description
                            </div>
                            <input type="text" @isReadOnly class="form-control " id="TPBackground" name="TPBackground" placeholder="Type a value" value="@Model.TPBackground" />

                        </div>
                        <div class="col-sm-6 col-md-3 form-group">
                            <div class="control-label">
                                Need Price Approved By
                            </div>
                            <input type="text" class="form-control " @isReadOnly id="NeedPriceApprovedBy" name="NeedPriceApprovedBy" value="@(Model.NeedPriceApprovedBy.HasValue?Model.NeedPriceApprovedBy.Value.ToString("MMM dd, yyyy"):"")" />

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="subheading">
                        Account Information
                        <hr>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Sold To #
                    </div>
                    <input type="text" @isReadOnly id="kCustomers" name="kCustomers" class="form-control" value="@Model.PlanningAccountNumber" />
                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Sold To Name
                    </div>
                    <input id="PlanningAccountName" class="form-control" type="text" @isReadOnly name="PlanningAccountName" />

                </div>
                <div class="col-sm-6 col-md-3 form-group">
                    <div class="control-label">
                        Currency
                    </div>
                    <input id="Currency" type="text" class="form-control" @isReadOnly name="Currency" value="@Model.Currency" />

                </div>
                <div class="col-sm-6 col-md-3 form-group-xs form-group">
                    <div class="control-label">
                        Account Manager
                    </div>
                    <input id="kddlAccountManager" class="form-control" name="kddlAccountManager" placeholder="Select Account Manager" />
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-6  form-group">
                    <div class="control-label">
                        Tier 2 Customer #
                    </div>
                    <input type="text" id="EndCustomerName" class="form-control" name="EndCustomerName" @isReadOnly value="@Model.EndCustomerID" />
                </div>
                <div class="col-sm-6 col-md-6 form-group">
                    <div class="control-label">
                        End User
                    </div>
                    <input type="text" id="EndCustomerName" class="form-control" name="EndCustomerName" @isReadOnly value="@Model.EndUser" />

                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="subheading">
                        Quote Validity
                        <hr>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6 col-md-6 form-group">
                    <div class="control-label">
                        Valid From
                    </div>
                    <input id="PromoFromDatetime" class="form-control" name="PromoFromDatetime" placeholder="Select date" value="@Model.PromoFromDatetime">
                </div>
                <div class="col-sm-6 col-md-6 form-group">
                    <div class="control-label">
                        Valid To
                    </div>
                    <input id="PromolToDatetime" class="form-control" name="PromolToDatetime" placeholder="Select date" value="@Model.PromolToDatetime">
                </div>
            </div>
        </div>
    </div>
    <!--------------------------------------------- New panel --------------------------------------------->
    <div class="panel panel-primary">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-4">
                    <h3 class="panel-title">Add/Edit Product For Quote</h3>
                </div>
            </div>
        </div>
        <div class="panel-body">
            <div id="Grid" />
        </div>
    </div>
    <!--------------------------------------------- New panel --------------------------------------------->
    <div class="panel">
        <div class="panel-heading">
            <div class="row">
                <div class="pull-right ">
                    <div id="divSubmitSpinner" class="spinnerSubmit" style="display:none;">
                        <img id="img-spinner" src="/Content/Images/ajax-loader-small.GIF">
                    </div>
                    <div id="SubmitButtons" style="margin-right: 15px; visibility: visible;">


                        <div id="divPdfHistory" class="btn-group" style="visibility:hidden;">
                            <button type="button" id="btnGeneratePDF" class="btn btn-primary">Generate PDF</button>
                            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu" id="versionHistory"></ul>

                        </div>
                        <input type="submit" value="Approve" name="Command" id="btnDeleteQuote" class="btn btn-primary" data-mode="Approve" onclick="return approveQuote(this);">
                        <input type="submit" value="Cancel" name="Command" id="btnCopy" class="btn btn-primary" data-mode="Cancel">
                        <input type="submit" value="Reject" name="Command" id="btnSave" class="btn btn-primary" data-mode="Reject">

                    </div>

                </div>
                <div class="pull-left">
                    <div class="col-md-12">
                        <input type="hidden" value="" id="hdnCommand" name="hdnCommand" data-source-referrer="WorkList">
                        <div id="valerrors" class="alert alert-danger" role="alert" style="display: none; width: 860.969px;"></div>

                        <div id="valsuccess" class="alert alert-success" role="alert" style="display: none; width: 860.969px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    var hiddenColumns = {};
    hiddenColumns["PM"] = "";
    var approveQuote = function (e) {
        var postData = [];
        var ds = $("#Grid").data('kendoGrid').dataSource;
        $.each(ds.data(), function (i, val) {
            if (val.dirty) {
                postData.push(val);
            }
        });
        var api = "/api/quoteitems/approval/" + app.userId + "/" + app.role + "/" + app.quoteNumber;
        $.ajax({
            url: api,
            type: 'POST',
            contentType: "application/json",
            data: JSON.stringify(postData),
            success: function (result) {
                window.location.href = "/Home/Index/"+app.userId+'/'+app.role;
                //dfd.resolve({ Success: true, Result: result });
            },
            error: function (xhr) {
                //dfd.resolve({
                //    Success: false, Message: "Something went wrong..!!!"
                //});
            }
        });
        return false;
    };
    $(document).ready(function () {

        var dtpkPromoFromDatetime = $("#PromoFromDatetime").kendoDatePicker({
            culture: "en-US",
            change: function (e) { },
        }).data("kendoDatePicker");

        var dtpkPromolToDatetime = $("#PromolToDatetime").kendoDatePicker({
            culture: "en-US",
            change: function (e) { },
        }).data("kendoDatePicker");

        dtpkPromolToDatetime.enable(!app.isReadonly);
        dtpkPromoFromDatetime.enable(!app.isReadonly);


        $(function () {
            var focusedElement;
            $(document).on('focus', 'td[role=gridcell] input', function () {
                if (focusedElement == this) return; //already focused, return so user can now place cursor at specific point in input.
                focusedElement = this;
                setTimeout(function () { focusedElement.select(); }, 50); //select all text in any field on focus for easy re-entry. Delay sightly to allow focus to "stick" before selecting.
            });


            $(document).on('change', 'td[role=gridcell] input', function () {
                var field = $(this).attr('name');
                var grid = $("#Grid").data('kendoGrid');
                var row = $(this).closest("tr");
                var dataItem = grid.dataItem(row);
                grid.dataItem(row).dirty = true;
                grid.dataItem(row)[field] = $(this).val();
                console.log('dataItem', dataItem);
            });
        });

        var url = "/api/quoteitems/" + app.userId + "/" + app.role + "/" + app.quoteNumber;
        $("#Grid").kendoGrid({
            dataSource: {
                transport: {
                    read: url
                },
                schema: {
                    model: {
                        fields: {
                            productNumber: { type: "string" },
                            requestedQuantity: { type: "number" },
                            msrp: { type: "number" },
                            listPrice: { type: "number" },
                            requestedPOS: { type: "number" },

                            productCost: { type: "number" },
                            winLoss: { type: "string" },
                            winQuantity: { type: "number" },
                            winNetPrice: { type: "number" },
                            winPOS: { type: "string" },
                            requestedNetPrice: { type: "number" },

                            pmRedLine: {
                                type: "number",
                                parse: function (data) {
                                    if (data != "" && data != undefined && data == 999999) {
                                        return 0;
                                }
                                return data;
                                }
                            },
                            pmApprovedPrice: { type: "number" },
                            peRedLine: {
                                type: "number",
                                parse: function (data) {
                                    if (data != "" && data != undefined && data == 999999) {
                                        return 0;
                                    }
                                    return data;
                                }
                            },
                            peApprovedPrice: { type: "number" },
                            vpFinanceApprovedPrice: { type: "number" }
                        }
                    }
                },
                pageSize: 20,
            },
            height: 550,
            sortable: true,
            pageable: true,
            dataBound: function (e) {
                var roleselector = 'td[role=gridcell] input.@roleStyle';
                console.log($(roleselector));
                $.each($(roleselector), function (i, val) {
                    $(this).removeClass('readonly');
                });
             },
            columns: [{
                field: "productNumber",
                title: "SKU"
            },
            {
                field: "requestedQuantity",
                title: "Quantity"
            },
            {
                field: "msrp",
                title: "MSRP"
            },
            {
                field: "listPrice",
                title: "Price List"
            },
            {
                field: "requestedPOS",
                title: "Req. POS"
            },
            {
                field: "requestedNetPrice",
                title: "Req. Net Price"
            },
            {
                field: "pmRedLine",
                title: "PM RedLine",
                template: "#= pmRedLine>0 ? pmRedLine : '' #"
            },
            {
                field: "pmApprovedPrice",
                title: "PM ApprovedPrice",
                template: '<input type="text" class="pm readonly" name="pmApprovedPrice" value="#=pmApprovedPrice#"></input>',
            },
            {
                field: "peRedLine",
                title: "PE RedLine",
                template: "#= peRedLine>0 ? peRedLine : '' #"
            },
            {
                field: "peApprovedPrice",
                title: "PE ApprovedPrice",
                template: '<input type="text" class="poe readonly" name="peApprovedPrice" value="#=peApprovedPrice#"></input>',
            },
            {
                field: "vpFinanceApprovedPrice",
                title: "ApprovedPrice",
                template: '<input type="text" class="vpfinance readonly" name="vpFinanceApprovedPrice" value="#=vpFinanceApprovedPrice#"></input>',
            }
            ]
        });



        var hiddenColumns = {};
        hiddenColumns["PM"] = ["peRedLine", "peApprovedPrice", "vpFinanceApprovedPrice"];
        hiddenColumns["POE"] = ["vpFinanceApprovedPrice"];
        hiddenColumns["VP FINANCE"] = [];

        var grid = $("#Grid").data("kendoGrid");
        $.each(hiddenColumns[app.role], function (i, val) {
            grid.hideColumn(val);
        });
    });
</script>