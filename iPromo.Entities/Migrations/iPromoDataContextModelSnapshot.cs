// <auto-generated />
using iPromo.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace iPromo.Entities.Migrations
{
    [DbContext(typeof(iPromoDataContext))]
    partial class iPromoDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("iPromo.Entities.mtCustomer", b =>
                {
                    b.Property<string>("CustomerNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ALLOCATION_CHANNEL_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ALLOCATION_TERR_GRP_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Allocation_Channel")
                        .HasColumnName("Allocation Channel")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Allocation_Territory")
                        .HasColumnName("Allocation Territory")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Allocation_Territory_Desc")
                        .HasColumnName("Allocation Territory Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Allocation_Territory_Group")
                        .HasColumnName("Allocation Territory Group")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Bill_to_party")
                        .HasColumnName("Bill-to party")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Bill_to_party_Desc")
                        .HasColumnName("Bill-to party Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Business_Partner")
                        .HasColumnName("Business Partner")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CRM_SALORG")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CUSTOMER_BUS_GROUP_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CUSTOMER_CLASSIFICATION")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CUST_HIER1_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Channle_Partner_Prof")
                        .HasColumnName("Channle Partner Prof")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CountryKey")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CountryName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Credit_Hold_Status")
                        .HasColumnName("Credit Hold Status")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustHier_1")
                        .HasColumnName("CustHier 1")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CustHier_2")
                        .HasColumnName("CustHier 2")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("CustHier_3")
                        .HasColumnName("CustHier 3")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("CustomCostCalc");

                    b.Property<string>("CustomerPriceGroup")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("CustomerType")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Acct_Grp")
                        .HasColumnName("Customer Acct Grp")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Acct_Grp_Desc")
                        .HasColumnName("Customer Acct Grp Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Business_Group")
                        .HasColumnName("Customer Business Group")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Desc")
                        .HasColumnName("Customer Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Market")
                        .HasColumnName("Customer Market")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Segment")
                        .HasColumnName("Customer Segment")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_Segment_Desc")
                        .HasColumnName("Customer Segment Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Customer_is_Consumer")
                        .HasColumnName("Customer is Consumer")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("DISTRI_CHAN_DESC")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("DistributionChannel")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<bool?>("DoNotUse");

                    b.Property<string>("ExternalSalesRep1")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ExternalSalesRep2")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ExternalSalesRep3")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("FaxNumber")
                        .HasMaxLength(31)
                        .IsUnicode(false);

                    b.Property<string>("Fiscal_Year_Variant")
                        .HasColumnName("Fiscal Year Variant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Fund_Sales_District")
                        .HasColumnName("Fund Sales District")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Fund_Sales_District_Desc")
                        .HasColumnName("Fund Sales District Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Geographical_Region")
                        .HasColumnName("Geographical Region")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Geographical_Region_desc")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("I2_Distribution_Channel")
                        .HasColumnName("I2 Distribution Channel")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("I2_RSM_Allocation_Channel")
                        .HasColumnName("I2 RSM Allocation Channel")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("I2_RSM_Allocation_Territory_Group")
                        .HasColumnName("I2 RSM Allocation Territory Group")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("I2_RSM_Customer_Group_4")
                        .HasColumnName("I2 RSM Customer Group 4")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("I2_RSM_ID")
                        .HasColumnName("I2 RSM ID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("I2_RSM_Promotion_Group")
                        .HasColumnName("I2 RSM Promotion Group")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("IndustryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("InternalSalesRep1")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("InternalSalesRep2")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("InternalSalesRep3")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("MARKED_FOR_DELETE")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MARKET_COUNTRY")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MARKET_SUBREGION")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("MARKET_SUBREGION_Desc")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Market_Country_desc")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Name1")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Name2")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Name3")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("OEM_Subgroup")
                        .HasColumnName("OEM Subgroup")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("OrderBlock")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PRICE_GROUP_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PRICE_LIST_TYPE")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("P_O__Box")
                        .HasColumnName("P#O# Box")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Payer")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Payer_Desc")
                        .HasColumnName("Payer Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Plant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PriceListType")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<string>("SOLDTO_SHIPTO_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("STATE_DESC")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("SalesOrg")
                        .HasMaxLength(4)
                        .IsUnicode(false);

                    b.Property<string>("SalesOrg_desc")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Sales_District")
                        .HasColumnName("Sales District")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Sales_District_Desc")
                        .HasColumnName("Sales District Desc")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("ShowAll");

                    b.Property<string>("SortField")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("SortOrder");

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Street_Name")
                        .HasColumnName("Street Name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TAX_STATUS")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Telephone_1")
                        .HasColumnName("Telephone 1")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Vendor")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("CustomerNumber");

                    b.ToTable("mtCustomer");
                });

            modelBuilder.Entity("iPromo.Entities.mtListPrice", b =>
                {
                    b.Property<string>("Material")
                        .HasMaxLength(50);

                    b.Property<string>("Price_List")
                        .HasMaxLength(50);

                    b.Property<string>("Price_Grp")
                        .HasMaxLength(50);

                    b.Property<string>("Bic_ZConType")
                        .HasMaxLength(50);

                    b.Property<string>("Currency")
                        .HasMaxLength(50);

                    b.Property<string>("Prc_Lst_Su")
                        .HasMaxLength(50);

                    b.Property<string>("ValidFrom")
                        .HasMaxLength(50);

                    b.Property<string>("ValidTo")
                        .HasMaxLength(50);

                    b.HasKey("Material", "Price_List", "Price_Grp");

                    b.ToTable("mtListPrice");
                });

            modelBuilder.Entity("iPromo.Entities.Quote", b =>
                {
                    b.Property<long>("QuoteID")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountManagerID");

                    b.Property<string>("Action")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte[]>("AdditionalRequirements");

                    b.Property<string>("Application")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("BillTo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("CRM_Messages")
                        .HasColumnName("CRM Messages")
                        .IsUnicode(false);

                    b.Property<string>("CRM_Status")
                        .HasColumnName("CRM Status")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte[]>("CancelReason")
                        .IsUnicode(false);

                    b.Property<int?>("CanceledByUserID");

                    b.Property<DateTime?>("CanceledDateTime");

                    b.Property<byte[]>("CommentforPDF")
                        .IsUnicode(false);

                    b.Property<byte[]>("Comments")
                        .IsUnicode(false);

                    b.Property<int?>("CreatedByUserID");

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Currency")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomerWebSite")
                        .HasMaxLength(250);

                    b.Property<string>("EndCustomerID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("EndUser")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(13, 6)");

                    b.Property<bool?>("ExistingProject");

                    b.Property<DateTime?>("ExpectedShipDate");

                    b.Property<DateTime?>("ExpiryNotificationDate");

                    b.Property<DateTime?>("FinalExpiryNotificationDate");

                    b.Property<DateTime?>("InQWinlossDate");

                    b.Property<int?>("LastModifiedByUserID");

                    b.Property<DateTime?>("LastModifiedDatetime");

                    b.Property<DateTime?>("LossNotificationDate");

                    b.Property<DateTime?>("NeedPriceApprovedBy");

                    b.Property<int?>("PEActualApprovedByUserId");

                    b.Property<int?>("PEApprovedByUserId");

                    b.Property<DateTime?>("PEApprovedDateTime");

                    b.Property<int?>("PMActualApprovedByUserID");

                    b.Property<int?>("PMApprovedByUserID");

                    b.Property<DateTime?>("PMApprovedDateTime");

                    b.Property<string>("PlanningAccountNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("PrivateComments")
                        .IsUnicode(false);

                    b.Property<string>("Project")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("PromoFromDatetime");

                    b.Property<DateTime?>("PromolToDatetime");

                    b.Property<string>("PublicComments")
                        .IsUnicode(false);

                    b.Property<DateTime?>("QuoteExpirationDate");

                    b.Property<string>("QuoteNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("QuoteStatusLevelID");

                    b.Property<byte?>("QuoteStatusResultID");

                    b.Property<byte?>("QuoteSubTypeID");

                    b.Property<byte?>("QuoteTypeID");

                    b.Property<int?>("RSDActualApprovedByUserID");

                    b.Property<int?>("RSDApprovedByUserID");

                    b.Property<DateTime?>("RSDApprovedDateTime");

                    b.Property<int?>("RSMActualApprovedByUserID");

                    b.Property<int?>("RSMApprovedByUserID");

                    b.Property<DateTime?>("RSMApprovedDateTime");

                    b.Property<byte[]>("RejRetReason")
                        .IsUnicode(false);

                    b.Property<DateTime?>("RevenueApporvalDate");

                    b.Property<DateTime?>("SecondExpiryNotificationDate");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ShipTo")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SubmitDatetime");

                    b.Property<int?>("SubmittedByUserID");

                    b.Property<string>("TPBackground")
                        .IsUnicode(false);

                    b.Property<byte[]>("Token");

                    b.Property<decimal?>("TotalValue")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<int?>("VPFinanceActualApprovedByUserID");

                    b.Property<int?>("VPFinanceApprovedByUserID");

                    b.Property<DateTime?>("VPFinanceApprovedDateTime");

                    b.Property<string>("ValidTill")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("WinLossDateTime");

                    b.Property<int?>("WinLossUserID");

                    b.HasKey("QuoteID");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("iPromo.Entities.QuoteItem", b =>
                {
                    b.Property<long>("QuoteItemID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("BidDeskApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("BidDeskRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<string>("Competitor1")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal?>("Competitor1Price")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<string>("Competitor2")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<decimal?>("Competitor2Price")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<int>("CreatedByUserID");

                    b.Property<DateTime>("CreatedDateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.ComputedColumn);

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool?>("IsPOS");

                    b.Property<int>("LastUpdatedByUserID");

                    b.Property<decimal?>("ListPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<DateTime?>("ListPriceAsOf");

                    b.Property<string>("LossReason")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("MMApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("MMRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("MSRP")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("PEApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("PERedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("PMApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("PMRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("ProductCost")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<int?>("ProductCostRegionID");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ProductName")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ProductNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long>("QuoteID");

                    b.Property<byte?>("QuoteItemTypeID");

                    b.Property<decimal?>("RSDApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("RSDRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("RSMRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("RequestedNetPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("RequestedPOS")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<int?>("RequestedQuantity");

                    b.Property<DateTime?>("StartDate");

                    b.Property<DateTime>("UpdatedByDateTime");

                    b.Property<decimal?>("VPFinanceApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("VPSalesApprovedPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("VPSalesRedLine")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("WinAdCost")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<string>("WinLoss")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("WinNetPrice")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<decimal?>("WinPOS")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<int?>("WinQuantity");

                    b.HasKey("QuoteItemID");

                    b.HasIndex("QuoteID");

                    b.ToTable("QuoteItem");
                });

            modelBuilder.Entity("iPromo.Entities.Redline", b =>
                {
                    b.Property<long>("RedlineID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("ApprovedDateTime");

                    b.Property<int?>("ApprovedUserID");

                    b.Property<string>("Channel")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<short>("CurrencyID");

                    b.Property<string>("CustomerNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ProductFamily")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<long>("RedLineFileInfoID");

                    b.Property<decimal>("RedLineValue")
                        .HasColumnType("decimal(13, 2)");

                    b.Property<DateTime?>("RejectedDateTime");

                    b.Property<int?>("RejectedUserID");

                    b.Property<DateTime?>("RevokedDateTime");

                    b.Property<int?>("RevokedUserID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SKU")
                        .HasMaxLength(18)
                        .IsUnicode(false);

                    b.Property<string>("SalesRegion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("SalesSubRegion")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<short>("Status");

                    b.Property<DateTime>("ValidFrom");

                    b.Property<DateTime>("ValidTo");

                    b.HasKey("RedlineID");

                    b.ToTable("Redline");
                });

            modelBuilder.Entity("iPromo.Entities.SalesOrg", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<string>("Title")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ADUserID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("BPartner");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<bool?>("IsRSM");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ValidFrom");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("UserID", "Title");

                    b.ToTable("SalesOrg");
                });

            modelBuilder.Entity("iPromo.Entities.QuoteItem", b =>
                {
                    b.HasOne("iPromo.Entities.Quote", "Quote")
                        .WithMany("QuoteItem")
                        .HasForeignKey("QuoteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
